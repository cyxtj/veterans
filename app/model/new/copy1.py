
class MissionAlgor

class MissionAlgor(db.Model):
	MIALid = db.Column(db.String(36), nullable=False, primary_key=True)
	LEMIid = db.Column(db.String(36))
	ALGOid = db.Column(db.String(36))
	code = db.Column(db.String(30), nullable=False)
	name = db.Column(db.String(50), nullable=False)
	type = db.Column(db.SMALLdb.Integer, nullable=False)
	sequence = db.Column(db.Integer, nullable=False)
	primary key (MIALid)

class MissionPar(db.Model):
	MIPAid = db.Column(db.String(36), nullable=False, primary_key=True)
	MIALid = db.Column(db.String(36))
	code = db.Column(db.String(50), nullable=False)
	name = db.Column(db.String(50), nullable=False)
	value = db.Column(db.String(100), nullable=False)
	illustration = db.Column(db.String(200), nullable=False, default=' ')
	primary key (MIPAid)

class accessory(db.Model):
	ACCEid = db.Column(db.String(36), nullable=False, primary_key=True)
	ownerid = db.Column(db.String(36), nullable=False)
	realFilename = db.Column(db.String(100), nullable=False, default=' ')
	filename = db.Column(db.String(100), nullable=False, default=' ')
	filetype = db.Column(db.String(50), nullable=False, default=' ')
	path = db.Column(db.String(200), nullable=False, default=' ')
	illustration = db.Column(db.text, nullable=False, default=' ')
	createDay = db.Column(db.DateTime, nullable=False, default='1900-1-1')
	optrid = db.Column(db.String(36), nullable=False, default=' ')
	primary key (ACCEid)

class algorithm(db.Model):
	ALGOid = db.Column(db.String(36), nullable=False, primary_key=True)
	code = db.Column(db.String(30), nullable=False)
	name = db.Column(db.String(50), nullable=False)
	type = db.Column(db.SMALLdb.Integer, nullable=False)
	illustration = db.Column(db.String(300), nullable=False, default=' ')
	primary key (ALGOid)

class algorithmPar(db.Model):
	ALPAid = db.Column(db.String(36), nullable=False, primary_key=True)
	ALGOid = db.Column(db.String(36))
	code = db.Column(db.String(50), nullable=False)
	name = db.Column(db.String(50), nullable=False)
	value = db.Column(db.String(100), nullable=False)
	illustration = db.Column(db.String(200), nullable=False, default=' ')
	primary key (ALPAid)

class ancientBook(db.Model):
	ANBOid = db.Column(db.String(36), nullable=False, primary_key=True)
	REBOid = db.Column(db.String(36))
	literature = db.Column(db.String(20), nullable=False, default=' ')
	pubType = db.Column(db.String(10), nullable=False, default=' ')
	benefit = db.Column(db.String(100), nullable=False, default=' ')
	primary key (ANBOid)

class ancientSpecialist(db.Model):
	ANSPid = db.Column(db.String(36), nullable=False, primary_key=True)
	REBOid = db.Column(db.String(36))
	name = db.Column(db.String(20), nullable=False)
	major = db.Column(db.String(100), nullable=False)
	primary key (ANSPid)

class background(db.Model):
	BACKid = db.Column(db.String(36), nullable=False, primary_key=True)
	STSTid = db.Column(db.String(36))
	sport = db.Column(db.String(300), nullable=False)
	literature = db.Column(db.String(300), nullable=False)
	health = db.Column(db.String(300), nullable=False)
	tour = db.Column(db.String(300), nullable=False)
	other = db.Column(db.String(300), nullable=False)
	smoke = db.Column(db.String(300), nullable=False)
	coffee = db.Column(db.String(300), nullable=False)
	alcohol = db.Column(db.String(300), nullable=False)
	tea = db.Column(db.String(300), nullable=False)
	movie = db.Column(db.String(300), nullable=False)
	other = db.Column(db.String(300), nullable=False)
	chinese = db.Column(db.String(300), nullable=False)
	philosophy = db.Column(db.String(300), nullable=False)
	art = db.Column(db.String(300), nullable=False)
	custom = db.Column(db.String(300), nullable=False)
	belief = db.Column(db.String(300), nullable=False)
	other = db.Column(db.String(300), nullable=False)
	other = db.Column(db.text, nullable=False, default=' ')
	tiptop = db.Column(db.String(300), nullable=False)
	years = db.Column(db.String(10), nullable=False)
	organization = db.Column(db.String(300), nullable=False)
	parttime = db.Column(db.String(300), nullable=False)
	glory = db.Column(db.String(300), nullable=False)
	acquire = db.Column(db.String(10), nullable=False)
	primary key (BACKid)

class badInstance(db.Model):
	BAINid = db.Column(db.String(36), nullable=False, primary_key=True)
	REBOid = db.Column(db.String(36))
	content = db.Column(db.text, nullable=False, default=' ')
	primary key (BAINid)

class basicinformation(db.Model):
	Num = db.Column(db.String(50), nullable=False)
	Name = db.Column(db.String(50), nullable=False)
	Gender = db.Column(db.String(50), nullable=False)
	Age = db.Column(db.String(50), nullable=False)
	Diploma = db.Column(db.String(50), nullable=False)
	Dgree = db.Column(db.String(50), nullable=False)
	Rank = db.Column(db.String(50))
	PromotionTime = db.Column(db.String(50))
	Duty = db.Column(db.text)
	HashId = db.Column(db.String(36), nullable=False, primary_key=True)
	State = db.Column(db.SMALLdb.Integer)
	SpecialisId = db.Column(db.String(36))
	OperatorId = db.Column(db.String(36))
	CreateDate = db.Column(db.DateTime)
	primary key (HashId)

class bookResult(db.Model):
	Num = db.Column(db.String(50))
	Title = db.Column(db.String(50))
	Author = db.Column(db.String(50))
	AuthorAffiliation = db.Column(db.String(50))
	Abstract = db.Column(db.text)
	Source = db.Column(db.String(50))
	Files = db.Column(db.String(50))
	SpecialistId = db.Column(db.String(36))
	OperatorId = db.Column(db.String(36))
	HashId = db.Column(db.String(36), nullable=False, primary_key=True)
	State = db.Column(db.SMALLdb.Integer)
	primary key (HashId)

class cDisease(db.Model):
	CDISid = db.Column(db.String(36), nullable=False, primary_key=True)
	code = db.Column(db.String(20), nullable=False)
	name = db.Column(db.String(100), nullable=False)
	parentcode = db.Column(db.String(20), nullable=False)
	level = db.Column(db.SMALLdb.Integer, nullable=False)
	isClassical = db.Column(db.Boolean, nullable=False, default=1)
	SPETid = db.Column(db.String(36), nullable=False, default=' ')
	illustration = db.Column(db.text, nullable=False, default=' ')
	createDay = db.Column(db.DateTime, nullable=False, default='1900-1-1')
	optrid = db.Column(db.String(36), nullable=False, default=' ')
	state = db.Column(db.SMALLdb.Integer, nullable=False, default=0)
	primary key (CDISid))
	key = db.Column(AK_CDISEASE_PK_CODE_CDISEASE (code)

class caseAnalysis(db.Model):
	CAANid = db.Column(db.String(36), nullable=False, primary_key=True)
	SPETid = db.Column(db.String(36))
	CASEid = db.Column(db.String(36), nullable=False)
	diagnose = db.Column(db.SMALLdb.Integer, nullable=False, default=0)
	diagnose = db.Column(db.SMALLdb.Integer, nullable=False, default=0)
	look = db.Column(db.String(50), nullable=False)
	illustration = db.Column(db.text, nullable=False)
	tongue = db.Column(db.SMALLdb.Integer, nullable=False, default=0)
	tongue1 = db.Column(db.String(50), nullable=False)
	look = db.Column(db.String(50), nullable=False)
	sound = db.Column(db.String(50), nullable=False)
	taste = db.Column(db.String(50), nullable=False)
	question = db.Column(db.String(200), nullable=False)
	question = db.Column(db.text, nullable=False)
	special = db.Column(db.String(200), nullable=False)
	feel = db.Column(db.String(200), nullable=False)
	habit = db.Column(db.String(200), nullable=False)
	important = db.Column(db.String(500), nullable=False)
	information = db.Column(db.String(200), nullable=False)
	analysis = db.Column(db.String(500), nullable=False)
	analysis = db.Column(db.SMALLdb.Integer, nullable=False, default=0)
	other = db.Column(db.String(200), nullable=False)
	analysis = db.Column(db.String(200), nullable=False)
	reason = db.Column(db.String(200), nullable=False)
	character = db.Column(db.String(200), nullable=False)
	place = db.Column(db.String(200), nullable=False)
	situation = db.Column(db.String(200), nullable=False)
	semiotics = db.Column(db.String(50), nullable=False)
	recipe = db.Column(db.String(50), nullable=False)
	produce = db.Column(db.String(200), nullable=False)
	takedrug = db.Column(db.String(200), nullable=False)
	doctor = db.Column(db.text, nullable=False)
	experience = db.Column(db.String(500), nullable=False)
	createDay = db.Column(db.DateTime, nullable=False, default='1900-1-1')
	optrid = db.Column(db.String(36), nullable=False, default=' ')
	state = db.Column(db.SMALLdb.Integer, nullable=False, default=0)
	primary key (CAANid)

class classicCase(db.Model):
	clcaid = db.Column(db.String(36), nullable=False, primary_key=True)
	operatorId = db.Column(db.String(36))
	SPETid = db.Column(db.String(36))
	state = db.Column(db.SMALLdb.Integer)
	diagnosisNo = db.Column(db.String(50))
	creatDate = db.Column(db.DateTime)
	num = db.Column(db.String(36), nullable=False)
	title = db.Column(db.String(50))
	source = db.Column(db.SMALLdb.Integer)
	caseNum = db.Column(db.String(50))
	name = db.Column(db.String(50))
	gender = db.Column(db.String(50))
	birthday = db.Column(db.String(50))
	people = db.Column(db.String(50))
	job = db.Column(db.String(50))
	hometown = db.Column(db.String(50))
	married = db.Column(db.String(50))
	address = db.Column(db.String(50))
	postcode = db.Column(db.String(50))
	phone = db.Column(db.String(50))
	presentIll = db.Column(db.text)
	pastIll = db.Column(db.text)
	familyIll = db.Column(db.text)
	personalIll = db.Column(db.text)
	visit = db.Column(db.text)
	note = db.Column(db.text)
	remark = db.Column(db.text)
	collectPerson = db.Column(db.String(50))
	collectTime = db.Column(db.String(50))
	verifyOpinion = db.Column(db.text)
	verifyName = db.Column(db.String(50))
	verifyTime = db.Column(db.String(50))
	diagTime1 = db.Column(db.String(50))
	mainDisease1 = db.Column(db.text)
	caseAbstract1 = db.Column(db.text)
	zhengKeys1 = db.Column(db.text)
	westdisease1 = db.Column(db.String(50))
	tcmdisease1 = db.Column(db.String(50))
	tcmsyndrome1 = db.Column(db.String(50))
	therapy1 = db.Column(db.text)
	fangYao1 = db.Column(db.text)
	otherCure1 = db.Column(db.text)
	doctorAdvice1 = db.Column(db.text)
	efficacy1 = db.Column(db.String(50))
	diagTime2 = db.Column(db.String(50))
	mainDisease2 = db.Column(db.text)
	caseAbstract2 = db.Column(db.text)
	zhengKeys2 = db.Column(db.text)
	westdisease2 = db.Column(db.String(50))
	tcmdisease2 = db.Column(db.String(50))
	tcmsyndrome2 = db.Column(db.String(50))
	therapy2 = db.Column(db.text)
	fangYao2 = db.Column(db.text)
	otherCure2 = db.Column(db.text)
	doctorAdvice2 = db.Column(db.text)
	efficacy2 = db.Column(db.String(50))
	diagTime3 = db.Column(db.String(50))
	mainDisease3 = db.Column(db.text)
	caseAbstract3 = db.Column(db.text)
	zhengKeys3 = db.Column(db.text)
	westdisease3 = db.Column(db.String(50))
	tcmdisease3 = db.Column(db.String(50))
	tcmsyndrome3 = db.Column(db.String(50))
	therapy3 = db.Column(db.text)
	fangYao3 = db.Column(db.text)
	otherCure3 = db.Column(db.text)
	doctorAdvice3 = db.Column(db.text)
	efficacy3 = db.Column(db.String(50))
	diagTime4 = db.Column(db.String(50))
	mainDisease4 = db.Column(db.text)
	caseAbstract4 = db.Column(db.text)
	zhengKeys4 = db.Column(db.text)
	westdisease4 = db.Column(db.String(50))
	tcmdisease4 = db.Column(db.String(50))
	tcmsyndrome4 = db.Column(db.String(50))
	therapy4 = db.Column(db.text)
	fangYao4 = db.Column(db.text)
	otherCure4 = db.Column(db.text)
	doctorAdvice4 = db.Column(db.text)
	efficacy4 = db.Column(db.String(50))
	diagTime5 = db.Column(db.String(50))
	mainDisease5 = db.Column(db.text)
	caseAbstract5 = db.Column(db.text)
	zhengKeys5 = db.Column(db.text)
	westdisease5 = db.Column(db.String(50))
	tcmdisease5 = db.Column(db.String(50))
	tcmsyndrome5 = db.Column(db.String(50))
	therapy5 = db.Column(db.text)
	fangYao5 = db.Column(db.text)
	otherCure5 = db.Column(db.text)
	doctorAdvice5 = db.Column(db.text)
	efficacy5 = db.Column(db.String(50))
	diagTime6 = db.Column(db.String(50))
	mainDisease6 = db.Column(db.text)
	caseAbstract6 = db.Column(db.text)
	zhengKeys6 = db.Column(db.text)
	westdisease6 = db.Column(db.String(50))
	tcmdisease6 = db.Column(db.String(50))
	tcmsyndrome6 = db.Column(db.String(50))
	therapy6 = db.Column(db.text)
	fangYao6 = db.Column(db.text)
	otherCure6 = db.Column(db.text)
	doctorAdvice6 = db.Column(db.text)
	efficacy6 = db.Column(db.String(50))
	diagTime7 = db.Column(db.String(50))
	mainDisease7 = db.Column(db.text)
	caseAbstract7 = db.Column(db.text)
	zhengKeys7 = db.Column(db.text)
	westdisease7 = db.Column(db.String(50))
	tcmdisease7 = db.Column(db.String(50))
	tcmsyndrome7 = db.Column(db.String(50))
	therapy7 = db.Column(db.text)
	fangYao7 = db.Column(db.text)
	otherCure7 = db.Column(db.text)
	doctorAdvice7 = db.Column(db.text)
	efficacy7 = db.Column(db.String(50))
	diagTime8 = db.Column(db.String(50))
	mainDisease8 = db.Column(db.text)
	caseAbstract8 = db.Column(db.text)
	zhengKeys8 = db.Column(db.text)
	westdisease8 = db.Column(db.String(50))
	tcmdisease8 = db.Column(db.String(50))
	tcmsyndrome8 = db.Column(db.String(50))
	therapy8 = db.Column(db.text)
	fangYao8 = db.Column(db.text)
	otherCure8 = db.Column(db.text)
	doctorAdvice8 = db.Column(db.text)
	efficacy8 = db.Column(db.String(50))
	diagTime9 = db.Column(db.String(50))
	mainDisease9 = db.Column(db.text)
	caseAbstract9 = db.Column(db.text)
	zhengKeys9 = db.Column(db.text)
	westdisease9 = db.Column(db.String(50))
	tcmdisease9 = db.Column(db.String(50))
	tcmsyndrome9 = db.Column(db.String(50))
	therapy9 = db.Column(db.text)
	fangYao9 = db.Column(db.text)
	otherCure9 = db.Column(db.text)
	doctorAdvice9 = db.Column(db.text)
	efficacy9 = db.Column(db.String(50))
	diagTime10 = db.Column(db.String(50))
	mainDisease10 = db.Column(db.text)
	caseAbstract10 = db.Column(db.text)
	zhengKeys10 = db.Column(db.text)
	westdisease10 = db.Column(db.String(50))
	tcmdisease10 = db.Column(db.String(50))
	tcmsyndrome10 = db.Column(db.String(50))
	therapy10 = db.Column(db.text)
	fangYao10 = db.Column(db.text)
	otherCure10 = db.Column(db.text)
	doctorAdvice10 = db.Column(db.text)
	efficacy10 = db.Column(db.String(50))
	diagTime11 = db.Column(db.String(50))
	mainDisease11 = db.Column(db.text)
	caseAbstract11 = db.Column(db.text)
	zhengKeys11 = db.Column(db.text)
	westdisease11 = db.Column(db.String(50))
	tcmdisease11 = db.Column(db.String(50))
	tcmsyndrome11 = db.Column(db.String(50))
	therapy11 = db.Column(db.text)
	fangYao11 = db.Column(db.text)
	otherCure11 = db.Column(db.text)
	doctorAdvice11 = db.Column(db.text)
	efficacy11 = db.Column(db.String(50))
	diagTime12 = db.Column(db.String(50))
	mainDisease12 = db.Column(db.text)
	caseAbstract12 = db.Column(db.text)
	zhengKeys12 = db.Column(db.text)
	westdisease12 = db.Column(db.String(50))
	tcmdisease12 = db.Column(db.String(50))
	tcmsyndrome12 = db.Column(db.String(50))
	therapy12 = db.Column(db.text)
	fangYao12 = db.Column(db.text)
	otherCure12 = db.Column(db.text)
	doctorAdvice12 = db.Column(db.text)
	efficacy12 = db.Column(db.String(50))
	diagTime13 = db.Column(db.String(50))
	mainDisease13 = db.Column(db.text)
	caseAbstract13 = db.Column(db.text)
	zhengKeys13 = db.Column(db.text)
	westdisease13 = db.Column(db.String(50))
	tcmdisease13 = db.Column(db.String(50))
	tcmsyndrome13 = db.Column(db.String(50))
	therapy13 = db.Column(db.text)
	fangYao13 = db.Column(db.text)
	otherCure13 = db.Column(db.text)
	doctorAdvice13 = db.Column(db.text)
	efficacy13 = db.Column(db.String(50))
	diagTime14 = db.Column(db.String(50))
	mainDisease14 = db.Column(db.text)
	caseAbstract14 = db.Column(db.text)
	zhengKeys14 = db.Column(db.text)
	westdisease14 = db.Column(db.String(50))
	tcmdisease14 = db.Column(db.String(50))
	tcmsyndrome14 = db.Column(db.String(50))
	therapy14 = db.Column(db.text)
	fangYao14 = db.Column(db.text)
	otherCure14 = db.Column(db.text)
	doctorAdvice14 = db.Column(db.text)
	efficacy14 = db.Column(db.String(50))
	diagTime15 = db.Column(db.String(50))
	mainDisease15 = db.Column(db.text)
	caseAbstract15 = db.Column(db.text)
	zhengKeys15 = db.Column(db.text)
	westdisease15 = db.Column(db.String(50))
	tcmdisease15 = db.Column(db.String(50))
	tcmsyndrome15 = db.Column(db.String(50))
	therapy15 = db.Column(db.text)
	fangYao15 = db.Column(db.text)
	otherCure15 = db.Column(db.text)
	doctorAdvice15 = db.Column(db.text)
	efficacy15 = db.Column(db.String(50))
	diagTime16 = db.Column(db.String(50))
	mainDisease16 = db.Column(db.text)
	caseAbstract16 = db.Column(db.text)
	zhengKeys16 = db.Column(db.text)
	westdisease16 = db.Column(db.String(50))
	tcmdisease16 = db.Column(db.String(50))
	tcmsyndrome16 = db.Column(db.String(50))
	therapy16 = db.Column(db.text)
	fangYao16 = db.Column(db.text)
	otherCure16 = db.Column(db.text)
	doctorAdvice16 = db.Column(db.text)
	efficacy16 = db.Column(db.String(50))
	diagTime17 = db.Column(db.String(50))
	mainDisease17 = db.Column(db.text)
	caseAbstract17 = db.Column(db.text)
	zhengKeys17 = db.Column(db.text)
	westdisease17 = db.Column(db.String(50))
	tcmdisease17 = db.Column(db.String(50))
	tcmsyndrome17 = db.Column(db.String(50))
	therapy17 = db.Column(db.text)
	fangYao17 = db.Column(db.text)
	otherCure17 = db.Column(db.text)
	doctorAdvice17 = db.Column(db.text)
	efficacy17 = db.Column(db.String(50))
	diagTime18 = db.Column(db.String(50))
	mainDisease18 = db.Column(db.text)
	caseAbstract18 = db.Column(db.text)
	zhengKeys18 = db.Column(db.text)
	westdisease18 = db.Column(db.String(50))
	tcmdisease18 = db.Column(db.String(50))
	tcmsyndrome18 = db.Column(db.String(50))
	therapy18 = db.Column(db.text)
	fangYao18 = db.Column(db.text)
	otherCure18 = db.Column(db.text)
	doctorAdvice18 = db.Column(db.text)
	efficacy18 = db.Column(db.String(50))
	primary key (clcaid)

class classicCaseDiagnosis(db.Model):
	clcaid = db.Column(db.String(36), nullable=False, primary_key=True)
	caseNum = db.Column(db.String(50))
	diagnosisNum = db.Column(db.String(50))
	diagTime = db.Column(db.String(50))
	mainDisease = db.Column(db.text)
	caseAbstract = db.Column(db.text)
	zhengKeys = db.Column(db.text)
	westdisease = db.Column(db.String(50))
	tcmdisease = db.Column(db.String(50))
	tcmsyndrome = db.Column(db.String(50))
	therapy = db.Column(db.text)
	fangYao = db.Column(db.text)
	otherCure = db.Column(db.text)
	doctorAdvice = db.Column(db.text)
	efficacy = db.Column(db.String(50))
	primary key (clcaid)

class continuingeducation(db.Model):
	Participent = db.Column(db.String(50))
	TrainingName = db.Column(db.String(50))
	Category = db.Column(db.String(50))
	TrainingDate = db.Column(db.String(50))
	Hours = db.Column(db.String(50))
	CreditHour = db.Column(db.String(50))
	HashId = db.Column(db.String(36), nullable=False, primary_key=True)
	SpecialisId = db.Column(db.String(36))
	State = db.Column(db.SMALLdb.Integer)
	OperatorId = db.Column(db.String(36))
	CreateDate = db.Column(db.DateTime)
	primary key (HashId)

class dCase(db.Model):
	CASEid = db.Column(db.String(36), nullable=False, primary_key=True)
	SPETid = db.Column(db.String(36), nullable=False, default=' ')
	DTMPid = db.Column(db.String(36), nullable=False, default=' ')
	code = db.Column(db.String(20), nullable=False)
	outpatientCode = db.Column(db.String(20), nullable=False)
	caseKind = db.Column(smalldb.Integer, nullable=False)
	name = db.Column(db.String(20), nullable=False)
	age = db.Column(smalldb.Integer, nullable=False)
	month = db.Column(smalldb.Integer, nullable=False, default=0)
	gender = db.Column(db.SMALLdb.Integer, nullable=False)
	nationality = db.Column(db.SMALLdb.Integer, nullable=False)
	personSort = db.Column(db.SMALLdb.Integer, nullable=False)
	afflication = db.Column(db.String(200), nullable=False, default=' ')
	job = db.Column(db.String(20), nullable=False, default=' ')
	tel = db.Column(db.String(20), nullable=False, default=' ')
	address = db.Column(db.String(200), nullable=False, default=' ')
	birthplace = db.Column(db.String(6), nullable=False)
	liveplace = db.Column(db.String(6), nullable=False)
	education = db.Column(db.SMALLdb.Integer, nullable=False)
	marriage = db.Column(db.SMALLdb.Integer, nullable=False)
	ohistory = db.Column(db.text, nullable=False, default=' ')
	phistory = db.Column(db.text, nullable=False, default=' ')
	fhistory = db.Column(db.text, nullable=False, default=' ')
	allergy = db.Column(db.text, nullable=False, default=' ')
	extraMed = db.Column(db.String(500), nullable=False, default=' ')
	nhistory = db.Column(db.text, nullable=False, default=' ')
	mresult = db.Column(db.SMALLdb.Integer, nullable=False)
	vresult = db.Column(db.String(500), nullable=False)
	illustration = db.Column(db.text, nullable=False, default=' ')
	state = db.Column(db.SMALLdb.Integer, nullable=False, default=0)
	createDay = db.Column(db.DateTime, nullable=False, default='1900-1-1')
	optrid = db.Column(db.String(36), nullable=False, default=' ')
	hasFile = db.Column(db.Boolean, nullable=False, default=0)
	preState = db.Column(db.SMALLdb.Integer, nullable=False, default=0)
	primary key (CASEid))
	check = db.Column(([age] >= 0 and [age] <= 999)

class dMethod(db.Model):
	DMETid = db.Column(db.String(36), nullable=False, primary_key=True)
	code = db.Column(db.String(20), nullable=False)
	name = db.Column(db.String(100), nullable=False)
	parentcode = db.Column(db.String(20), nullable=False)
	level = db.Column(db.SMALLdb.Integer, nullable=False)
	isClassical = db.Column(db.Boolean, nullable=False, default=1)
	SPETid = db.Column(db.String(36), nullable=False, default=' ')
	illustration = db.Column(db.text, nullable=False, default=' ')
	createDay = db.Column(db.DateTime, nullable=False, default='1900-1-1')
	optrid = db.Column(db.String(36), nullable=False, default=' ')
	state = db.Column(db.SMALLdb.Integer, nullable=False, default=0)
	primary key (DMETid))
	key = db.Column(AK_DMETHOD_PK_CODE_DMETHOD (code)

class dTemplate(db.Model):
	DTMPid = db.Column(db.String(36), nullable=False, primary_key=True)
	code = db.Column(db.String(20), nullable=False)
	name = db.Column(db.String(200), nullable=False)
	useClassCdis = db.Column(db.Boolean, nullable=False, default=0)
	useClassDmet = db.Column(db.Boolean, nullable=False, default=0)
	CDISid = db.Column(db.String(36), nullable=False, default=' ')
	WDISid = db.Column(db.String(36), nullable=False, default=' ')
	SEMCid = db.Column(db.String(36), nullable=False)
	DMETid = db.Column(db.String(36), nullable=False)
	takeWay = db.Column(db.SMALLdb.Integer, nullable=False)
	drugForm = db.Column(db.SMALLdb.Integer, nullable=False)
	SPETid = db.Column(db.String(36), nullable=False, default=' ')
	illustration = db.Column(db.text, nullable=False, default=' ')
	createDay = db.Column(db.DateTime, nullable=False, default='1900-1-1')
	optrid = db.Column(db.String(36), nullable=False, default=' ')
	useClassWdis = db.Column(db.Boolean, nullable=False, default=0)
	state = db.Column(db.SMALLdb.Integer, nullable=False, default=0)
	primary key (DTMPid))
	key = db.Column(AK_DTEMPLATE_PK_CODE_DTEMPLAT (code)

class dataSet(db.Model):
	DASEid = db.Column(db.String(36), nullable=False, primary_key=True)
	DTMPid = db.Column(db.String(36), nullable=False)
	code = db.Column(db.String(20), nullable=False)
	name = db.Column(db.String(50), nullable=False)
	missionType = db.Column(db.SMALLdb.Integer, nullable=False)
	sampleNum = db.Column(db.Integer, nullable=False, default=0)
	attributeNum = db.Column(db.Integer, nullable=False, default=0)
	state = db.Column(db.SMALLdb.Integer, nullable=False, default=0)
	createDay = db.Column(db.DateTime, nullable=False, default='1900-1-1')
	optrid = db.Column(db.String(36), nullable=False, default=' ')
	primary key (DASEid)

class diagExam(db.Model):
	DIEXid = db.Column(db.String(36), nullable=False, primary_key=True)
	DIAGid = db.Column(db.String(36))
	EXAMid = db.Column(db.String(36))
	value = db.Column(db.String(200), nullable=False, default=' ')
	illustration = db.Column(db.text, nullable=False, default=' ')
	date = db.Column(db.DateTime)
	sequence db.Integer = db.Column(default=0)
	address = db.Column(db.String(100))
	primary key (DIEXid)

class diagItem(db.Model):
	DIITid = db.Column(db.String(36), nullable=False, primary_key=True)
	DIREid = db.Column(db.String(36))
	dru = db.Column(db.String(36))
	DRUGid = db.Column(db.String(36))
	quality = db.Column(decimal(18,4), nullable=False, default=0)
	sequence = db.Column(db.Integer, nullable=False, default=0)
	illustration = db.Column(db.text, nullable=False, default=' ')
	primary key (DIITid)

class diagRecipe(db.Model):
	DIREid = db.Column(db.String(36), nullable=False, primary_key=True)
	DIAGid = db.Column(db.String(36))
	FREPid = db.Column(db.String(36))
	isCustomed = db.Column(db.Boolean, nullable=False, default=0)
	name = db.Column(db.String(36), nullable=False, default=' ')
	doctorAdvice = db.Column(db.text, nullable=False, default=' ')
	drugForm = db.Column(db.SMALLdb.Integer, nullable=False)
	takeWay = db.Column(db.SMALLdb.Integer, nullable=False)
	quality = db.Column(smalldb.Integer, nullable=False)
	produceMethod = db.Column(db.String(100), nullable=False)
	"usage" db.String(100), nullable=False)
	primary key (DIREid)

class diagSymptom(db.Model):
	DISYid = db.Column(db.String(36), nullable=False, primary_key=True)
	SYPMid = db.Column(db.String(36))
	DIAGid = db.Column(db.String(36))
	value = db.Column(db.String(200), nullable=False, default=' ')
	illustration = db.Column(db.text, nullable=False, default=' ')
	sequence db.Integer = db.Column(default=0)
	primary key (DISYid)

class diagnose(db.Model):
	DIAGid = db.Column(db.String(36), nullable=False, primary_key=True)
	CASEid = db.Column(db.String(36))
	CDISid = db.Column(db.String(36), nullable=False, default=' ')
	CDISid2 = db.Column(db.String(36), nullable=False, default=' ')
	WDISid = db.Column(db.String(36), nullable=False, default=' ')
	WDISid2 = db.Column(db.String(36), nullable=False, default=' ')
	SEMCid = db.Column(db.String(36), nullable=False)
	SEMCid2 = db.Column(db.String(36), nullable=False)
	SEMCid3 = db.Column(db.String(36), nullable=False)
	DMETid = db.Column(db.String(36), nullable=False)
	DMETid2 = db.Column(db.String(36), nullable=False)
	DMETid3 = db.Column(db.String(36), nullable=False)
	DIAGno = db.Column(db.SMALLdb.Integer, nullable=False, default=1)
	DIAGnum = db.Column(db.SMALLdb.Integer, nullable=False)
	DIAGday = db.Column(db.DateTime, nullable=False)
	lunarDay = db.Column(db.String(50), nullable=False, default=' ')
	solarTerm = db.Column(db.SMALLdb.Integer, nullable=False, default=0)
	DIAway = db.Column(db.SMALLdb.Integer, nullable=False, default=0)
	majorSue = db.Column(db.text, nullable=False)
	illustration = db.Column(db.text, nullable=False, default=' ')
	optrid = db.Column(db.String(36), nullable=False, default=' ')
	createDay = db.Column(db.DateTime, nullable=False, default='1900-1-1')
	westernMed = db.Column(db.text, nullable=False, default=' ')
	other = db.Column(db.text, nullable=False, default=' ')
	preSEMCid = db.Column(db.String(36))
	primary key (DIAGid)

class district(db.Model):
	DISTid = db.Column(db.String(36), nullable=False, primary_key=True)
	code = db.Column(db.String(20), nullable=False)
	parentcode = db.Column(db.String(20), nullable=False)
	name = db.Column(db.String(50), nullable=False)
	level = db.Column(db.SMALLdb.Integer, nullable=False)
	py = db.Column(db.String(20), nullable=False, default=' ')
	wb = db.Column(db.String(20), nullable=False, default=' ')
	illustration = db.Column(db.text, nullable=False, default=' ')
	primary key (DISTid))
	key = db.Column(AK_DISTRICT_PK_CODE_DISTRICT (code)

class drug(db.Model):
	DRUGid = db.Column(db.String(36), nullable=False, primary_key=True)
	code = db.Column(db.String(20), nullable=False)
	name = db.Column(db.String(50), nullable=False)
	unit = db.Column(db.String(10), nullable=False)
	alias = db.Column(db.String(100), nullable=False, default=' ')
	py = db.Column(db.String(20), nullable=False, default=' ')
	wb = db.Column(db.String(20), nullable=False, default=' ')
	isClassical = db.Column(db.Boolean, nullable=False, default=1)
	SPETid = db.Column(db.String(36), nullable=False, default=' ')
	illustration = db.Column(db.text, nullable=False, default=' ')
	createDay = db.Column(db.DateTime, nullable=False, default='1900-1-1')
	optrid = db.Column(db.String(36), nullable=False, default=' ')
	state = db.Column(db.SMALLdb.Integer, nullable=False, default=0)
	primary key (DRUGid))
	key = db.Column(AK_DRUG_PK_CODE_DRUG (code)

class dtmpExamination(db.Model):
	DTEXid = db.Column(db.String(36), nullable=False, primary_key=True)
	DTMPid = db.Column(db.String(36))
	EXAMid = db.Column(db.String(36))
	sequence = db.Column(db.Integer, nullable=False)
	illustration = db.Column(db.text, nullable=False)
	primary key (DTEXid)

class dtmpSymptom(db.Model):
	DTSYid = db.Column(db.String(36), nullable=False, primary_key=True)
	DTMPid = db.Column(db.String(36))
	SYPMid = db.Column(db.String(36))
	isFirst = db.Column(db.Boolean, nullable=False, default=1)
	sequence = db.Column(db.Integer, nullable=False, default=0)
	illustration = db.Column(db.text, nullable=False, default=' ')
	primary key (DTSYid)

class examination(db.Model):
	EXAMid = db.Column(db.String(36), nullable=False, primary_key=True)
	code = db.Column(db.String(20), nullable=False)
	name = db.Column(db.String(100), nullable=False)
	abbreviation = db.Column(db.String(50), nullable=False, default=' ')
	kind = db.Column(db.SMALLdb.Integer, nullable=False, default=0)
	normalValue = db.Column(db.String(200), nullable=False, default=' ')
	hasFile = db.Column(db.Boolean, nullable=False, default=0)
	isClassical = db.Column(db.Boolean, nullable=False, default=1)
	SPETid = db.Column(db.String(36), nullable=False, default=' ')
	illustration = db.Column(db.text, nullable=False, default=' ')
	createDay = db.Column(db.DateTime, nullable=False, default='1900-1-1')
	optrid = db.Column(db.String(36), nullable=False, default=' ')
	state = db.Column(db.SMALLdb.Integer, nullable=False, default=0)
	primary key (EXAMid))
	key = db.Column(AK_EXAMINATION_PK_COD_EXAMINAT (code)

class feature(db.Model):
	FEATid = db.Column(db.String(36), nullable=False, primary_key=True)
	DASEid = db.Column(db.String(36))
	code = db.Column(db.String(20), nullable=False)
	name = db.Column(db.String(50), nullable=False)
	featType = db.Column(db.SMALLdb.Integer, nullable=False)
	valSort = db.Column(db.SMALLdb.Integer, nullable=False, default=0)
	sequence = db.Column(db.Integer, nullable=False)
	primary key (FEATid)

class fileinfo(db.Model):
	FIlEINFOid = db.Column(db.String(36), nullable=False, primary_key=True)
	code = db.Column(db.String(20), nullable=False)
	name = db.Column(db.String(50), nullable=False)
	SPETid = db.Column(db.String(36), nullable=False)
	illustration = db.Column(db.text, nullable=False, default=' ')
	createDay = db.Column(db.DateTime, nullable=False)
	optrid = db.Column(db.String(36), nullable=False)
	state = db.Column(db.SMALLdb.Integer, nullable=False)
	fileinfoType = db.Column(db.SMALLdb.Integer, nullable=False)
	primary key (FIlEINFOid)

class fixedrecipe(db.Model):
	FREPid = db.Column(db.String(36), nullable=False, primary_key=True)
	code = db.Column(db.String(20), nullable=False)
	name = db.Column(db.String(50), nullable=False)
	effect = db.Column(db.String(200), nullable=False, default=' ')
	py = db.Column(db.String(20), nullable=False, default=' ')
	wb = db.Column(db.String(20), nullable=False, default=' ')
	isClassical = db.Column(db.Boolean, nullable=False, default=1)
	SPETid = db.Column(db.String(36), nullable=False, default=' ')
	illustration = db.Column(db.text, nullable=False, default=' ')
	createDay = db.Column(db.DateTime, nullable=False, default='1900-1-1')
	optrid = db.Column(db.String(36), nullable=False, default=' ')
	state = db.Column(db.SMALLdb.Integer, nullable=False, default=0)
	primary key (FREPid))
	key = db.Column(AK_FIXEDRECIPE_PK_COD_FIXEDREC (code)

class fixedrecipeItem(db.Model):
	FRITid = db.Column(db.String(36), nullable=False, primary_key=True)
	DRUGid = db.Column(db.String(36))
	FREPid = db.Column(db.String(36))
	quality = db.Column(decimal(18,4), nullable=False, default=0)
	sequence = db.Column(db.Integer, nullable=False, default=0)
	illustration = db.Column(db.text, nullable=False, default=' ')
	primary key (FRITid)

class genre(db.Model):
	GENRid = db.Column(db.String(36), nullable=False, primary_key=True)
	INSTid = db.Column(db.String(36))
	main = db.Column(db.String(20), nullable=False, default=' ')
	genre = db.Column(db.String(20), nullable=False, default=' ')
	achievement = db.Column(db.String(100), nullable=False, default=' ')
	primary key (GENRid)

class goodInstance(db.Model):
	GOINid = db.Column(db.String(36), nullable=False, primary_key=True)
	REBOid = db.Column(db.String(36))
	content = db.Column(db.text, nullable=False, default=' ')
	primary key (GOINid)

class inherit(db.Model):
	INHEid = db.Column(db.String(36), nullable=False, primary_key=True)
	INSTid = db.Column(db.String(36))
	name = db.Column(db.String(20), nullable=False)
	start = db.Column(db.String(16), nullable=False, default='1900-1-1')
	end = db.Column(db.String(16), nullable=False, default='1900-1-1')
	theoretics = db.Column(db.String(100), nullable=False, default=' ')
	db.Integerroduction = db.Column(db.text, nullable=False, default=' ')
	key = db.Column(db.String(100), nullable=False, default=' ')
	primary key (INHEid)

class inheritStudy(db.Model):
	INSTid = db.Column(db.String(36), nullable=False, primary_key=True)
	SPETid = db.Column(db.String(36))
	enlighten = db.Column(db.String(20), nullable=False)
	work = db.Column(db.String(50), nullable=False)
	major = db.Column(db.String(50), nullable=False)
	early = db.Column(db.text, nullable=False, default=' ')
	db.textbook_type db.SMALLdb.Integer, nullable=False)
	db.textbook = db.Column(db.text, nullable=False, default=' ')
	other = db.Column(db.text, nullable=False, default=' ')
	study = db.Column(db.text, nullable=False, default=' ')
	wisdom = db.Column(db.text, nullable=False, default=' ')
	aphorism = db.Column(db.text, nullable=False, default=' ')
	ideal = db.Column(db.text, nullable=False, default=' ')
	podb.Integer = db.Column(db.text, nullable=False, default=' ')
	createDay = db.Column(db.DateTime, nullable=False, default='1900-1-1')
	optrid = db.Column(db.String(36), nullable=False, default=' ')
	state = db.Column(db.SMALLdb.Integer, nullable=False, default=0)
	primary key (INSTid)

class db.IntegeregratedSym(db.Model):
	INSYid = db.Column(db.String(36), nullable=False, primary_key=True)
	SYPMid = db.Column(db.String(36))
	name = db.Column(db.String(50), nullable=False)
	valSort = db.Column(db.Integer, nullable=False)
	sequence = db.Column(db.Integer, nullable=False)
	primary key (INSYid)

class learnMission(db.Model):
	LEMIid = db.Column(db.String(36), nullable=False, primary_key=True)
	DASEid = db.Column(db.String(36))
	DTMPid = db.Column(db.String(36), nullable=False)
	code = db.Column(db.String(20), nullable=False)
	name = db.Column(db.String(50), nullable=False)
	missionType = db.Column(db.SMALLdb.Integer, nullable=False)
	testType = db.Column(db.SMALLdb.Integer, nullable=False)
	testPar = db.Column(decimal(4,1), nullable=False)
	illustration = db.Column(db.text, nullable=False, default=' ')
	state = db.Column(db.SMALLdb.Integer, nullable=False, default=0)
	createDay = db.Column(db.DateTime, nullable=False, default='1900-1-1')
	optrid = db.Column(db.String(36), nullable=False, default=' ')
	primary key (LEMIid)

class literature(db.Model):
	LITEid = db.Column(db.String(36), nullable=False, primary_key=True)
	SCIEid = db.Column(db.String(36))
	literature = db.Column(db.String(20), nullable=False, default=' ')
	pubType = db.Column(db.String(10), nullable=False, default=' ')
	publishing = db.Column(db.String(16), nullable=False, default='1900-1-1')
	publishing = db.Column(db.String(30), nullable=False, default=' ')
	paper = db.Column(db.String(30), nullable=False, default=' ')
	magazine = db.Column(db.String(30), nullable=False, default=' ')
	primary key (LITEid)

class mainBook(db.Model):
	MABOid = db.Column(db.String(36), nullable=False, primary_key=True)
	INSTid = db.Column(db.String(36))
	literature = db.Column(db.String(20), nullable=False, default=' ')
	pubType = db.Column(db.String(10), nullable=False, default=' ')
	publishing = db.Column(db.String(16), nullable=False, default='1900-1-1')
	edition = db.Column(db.String(30), nullable=False, default=' ')
	publishing = db.Column(db.String(30), nullable=False, default=' ')
	primary key (MABOid)

class mediaInfo(db.Model):
	Num = db.Column(db.String(50))
	Name = db.Column(db.String(50))
	Category = db.Column(db.String(50))
	Abs = db.Column(db.text)
	ProducedTime = db.Column(db.String(50))
	Maker = db.Column(db.String(50))
	FileName = db.Column(db.String(50))
	Longth = db.Column(db.String(50))
	DataFormat = db.Column(db.String(50))
	SpecialistId = db.Column(db.String(36))
	OperatorId = db.Column(db.String(36))
	HashId = db.Column(db.String(36), nullable=False, primary_key=True)
	State = db.Column(db.SMALLdb.Integer)
	CreateDate = db.Column(db.DateTime)
	primary key (HashId)

class message(db.Model):
	MESGid = db.Column(db.String(36), nullable=False, primary_key=True)
	title = db.Column(db.String(100), nullable=False)
	content = db.Column(db.String(256), nullable=False)
	sender = db.Column(db.String(36), nullable=False)
	receivor = db.Column(db.String(36), nullable=False)
	readed = db.Column(db.Boolean, nullable=False)
	msgDate = db.Column(db.DateTime, nullable=False)
	sysMsg = db.Column(db.Boolean, nullable=False)
	primary key (MESGid)

class modernBook(db.Model):
	MOBOid = db.Column(db.String(36), nullable=False, primary_key=True)
	REBOid = db.Column(db.String(36))
	literature = db.Column(db.String(20), nullable=False, default=' ')
	pubType = db.Column(db.String(10), nullable=False, default=' ')
	benefit = db.Column(db.String(100), nullable=False, default=' ')
	primary key (MOBOid)

class modernSpecialist(db.Model):
	MOSPid = db.Column(db.String(36), nullable=False, primary_key=True)
	REBOid = db.Column(db.String(36))
	name = db.Column(db.String(20), nullable=False)
	isprofession = db.Column(db.Boolean, nullable=False, default=0)
	afflication = db.Column(db.String(100), nullable=False)
	major = db.Column(db.String(100), nullable=False)
	primary key (MOSPid)

class newDTechnology(db.Model):
	OperatorId = db.Column(db.String(36))
	Num = db.Column(db.String(50))
	Name = db.Column(db.String(50))
	Content = db.Column(db.text)
	FormationTime = db.Column(db.String(50))
	DevelopingPeople = db.Column(db.String(50))
	Possessor = db.Column(db.String(50))
	Bearer = db.Column(db.String(50))
	DevelopmentAffiliation = db.Column(db.text)
	PossesionAffiliation = db.Column(db.text)
	ApplicationAffiliation = db.Column(db.text)
	ApplicationStartingTime = db.Column(db.String(50))
	Files = db.Column(db.String(50))
	SpecialisId = db.Column(db.String(36))
	HashId = db.Column(db.String(36), nullable=False, primary_key=True)
	State = db.Column(db.SMALLdb.Integer)
	CreateDate = db.Column(db.DateTime)
	primary key (HashId)

class operator(db.Model):
	OPTRid = db.Column(db.String(36), nullable=False, primary_key=True)
	ROLEid = db.Column(db.String(36), nullable=False)
	username = db.Column(db.String(20), nullable=False)
	password = db.Column(db.String(100), nullable=False)
	realname = db.Column(db.String(20), nullable=False)
	gender = db.Column(db.SMALLdb.Integer, nullable=False, default=0)
	part = db.Column(db.String(100), nullable=False, default=' ')
	SPETid = db.Column(char(36), nullable=False, default=' ')
	illustration = db.Column(db.text, nullable=False, default=' ')
	insertLock = db.Column(db.Boolean, nullable=False, default=0)
	editLock = db.Column(db.Boolean, nullable=False, default=0)
	deleteLock = db.Column(db.Boolean, nullable=False, default=0)
	state = db.Column(db.SMALLdb.Integer, nullable=False, default=0)
	primary key (OPTRid))
	key = db.Column(AK_OPERATOR_PK_USERNA_OPERATOR (username)

class operatorfun(db.Model):
	OPTRid = db.Column(db.String(36), nullable=False, primary_key=True)
	SFUNid = db.Column(db.String(36), nullable=False)
	primary key (OPTRid, SFUNid)

class otherBook(db.Model):
	OTBOid = db.Column(db.String(36), nullable=False, primary_key=True)
	BACKid = db.Column(db.String(36))
	literature = db.Column(db.String(20), nullable=False, default=' ')
	pubType = db.Column(db.String(10), nullable=False, default=' ')
	benefit = db.Column(db.String(100), nullable=False, default=' ')
	primary key (OTBOid)

class otherInformation(db.Model):
	OTINid = db.Column(db.String(36), nullable=False, primary_key=True)
	INSTid = db.Column(db.String(36))
	literature = db.Column(db.String(20), nullable=False, default=' ')
	publishing = db.Column(db.String(16), nullable=False, default='1900-1-1')
	edition = db.Column(db.String(30), nullable=False, default=' ')
	publishing = db.Column(db.String(30), nullable=False, default=' ')
	magazine = db.Column(db.String(30), nullable=False, default=' ')
	entrepreneur = db.Column(db.String(30), nullable=False, default=' ')
	primary key (OTINid)

class paperResult(db.Model):
	num = db.Column(db.String(50))
	Title = db.Column(db.String(150))
	Author = db.Column(db.String(50))
	AuthorAffiliation = db.Column(db.String(50))
	Abstract = db.Column(db.text)
	Source = db.Column(db.String(50))
	Files = db.Column(db.String(50))
	SpeicalistId = db.Column(db.String(36))
	OperatorId = db.Column(db.String(36))
	HashId = db.Column(db.String(36), nullable=False, primary_key=True)
	State = db.Column(db.SMALLdb.Integer)
	CreateDate = db.Column(db.DateTime)
	primary key (HashId)

class patentResult(db.Model):
	Num = db.Column(db.String(50))
	Name = db.Column(db.String(50))
	ApplicationNum = db.Column(db.String(50))
	PatentNum = db.Column(db.String(50))
	PatentMandate = db.Column(db.String(50))
	Inventor = db.Column(db.String(50))
	Patentee = db.Column(db.String(50))
	Files = db.Column(db.String(50))
	SpecialistId = db.Column(db.String(36))
	OperatorId = db.Column(db.String(36))
	HashId = db.Column(db.String(36), nullable=False, primary_key=True)
	State = db.Column(db.SMALLdb.Integer)
	createDate = db.Column(db.DateTime)
	primary key (HashId)

class pullulation(db.Model):
	PULLid = db.Column(db.String(36), nullable=False, primary_key=True)
	STSTid = db.Column(db.String(36))
	famous = db.Column(db.String(100), nullable=False, default=' ')
	famous = db.Column(db.DateTime, nullable=False, default='1900-1-1')
	famous = db.Column(smalldb.Integer, nullable=False)
	famous = db.Column(db.String(50), nullable=False, default=' ')
	famous = db.Column(db.String(50), nullable=False, default=' ')
	revelation = db.Column(db.String(50), nullable=False, default=' ')
	experience = db.Column(db.text, nullable=False)
	aphorism = db.Column(db.String(100), nullable=False, default=' ')
	advice = db.Column(db.String(100), nullable=False)
	credendum = db.Column(db.String(100), nullable=False)
	hope = db.Column(db.String(100), nullable=False)
	other = db.Column(db.String(100), nullable=False)
	all_clinic_time smalldb.Integer, nullable=False)
	old_clinic_time smalldb.Integer, nullable=False)
	last_clinic_time smalldb.Integer, nullable=False)
	clinic = db.Column(db.text, nullable=False, default=' ')
	diagnose = db.Column(db.text, nullable=False, default=' ')
	primary key (PULLid)

class readBook(db.Model):
	REBOid = db.Column(db.String(36), nullable=False, primary_key=True)
	STSTid = db.Column(db.String(36))
	sequence = db.Column(db.String(300), nullable=False)
	study = db.Column(db.SMALLdb.Integer, nullable=False)
	emphases = db.Column(db.text, nullable=False)
	study = db.Column(db.SMALLdb.Integer, nullable=False)
	advice = db.Column(db.text, nullable=False)
	con = db.Column(db.text, nullable=False)
	extensive = db.Column(db.text, nullable=False)
	bad = db.Column(db.text, nullable=False)
	classic = db.Column(db.text, nullable=False)
	genre = db.Column(db.text, nullable=False)
	relation = db.Column(db.SMALLdb.Integer, nullable=False)
	opinion = db.Column(db.text, nullable=False)
	special = db.Column(db.String(500), nullable=False)
	ratio = db.Column(db.String(100), nullable=False)
	primary key (REBOid)

class rediagnose(db.Model):
	RDIAid = db.Column(db.String(36), nullable=False, primary_key=True)
	CAANid = db.Column(db.String(36))
	RDIAno = db.Column(db.SMALLdb.Integer, nullable=False)
	disease = db.Column(db.String(200), nullable=False)
	tongue = db.Column(db.SMALLdb.Integer, nullable=False, default=0)
	tongue1 = db.Column(db.String(50), nullable=False)
	artery = db.Column(db.String(50), nullable=False)
	other = db.Column(db.String(200), nullable=False)
	rediagnose = db.Column(db.text, nullable=False)
	primary key (RDIAid)

class researchItem(db.Model):
	Name = db.Column(db.String(50))
	Leval = db.Column(db.String(50))
	Princial = db.Column(db.String(50))
	Participent = db.Column(db.String(50))
	Affiliation = db.Column(db.text)
	Duration = db.Column(db.String(50))
	Source = db.Column(db.text)
	Abstruct = db.Column(db.String(50))
	HashId = db.Column(db.String(36), nullable=False, primary_key=True)
	SpecialisId = db.Column(db.String(36))
	State = db.Column(db.SMALLdb.Integer)
	OperationId = db.Column(db.String(36))
	Category = db.Column(db.String(50))
	CreateDate = db.Column(db.DateTime)
	primary key (HashId)

class resultReward(db.Model):
	Num = db.Column(db.String(50))
	ResultName = db.Column(db.String(50))
	Author = db.Column(db.String(50))
	AuthorAffiliation = db.Column(db.String(50))
	RewardName = db.Column(db.String(50))
	Leval = db.Column(db.String(50))
	RewardDate = db.Column(db.String(50))
	LicensingGroup = db.Column(db.String(50))
	Files = db.Column(db.String(50))
	SpecialistId = db.Column(db.String(36))
	OperatorId = db.Column(db.String(36))
	State = db.Column(db.SMALLdb.Integer)
	HashId = db.Column(db.String(36), nullable=False, primary_key=True)
	CreateDate = db.Column(db.DateTime)
	primary key (HashId)

class science(db.Model):
	SCIEid = db.Column(db.String(36), nullable=False, primary_key=True)
	SPETid = db.Column(db.String(36))
	recipe = db.Column(db.text, nullable=False, default=' ')
	drugs = db.Column(db.text, nullable=False)
	technique = db.Column(db.text, nullable=False, default=' ')
	recipes = db.Column(db.text, nullable=False, default=' ')
	study = db.Column(db.text, nullable=False, default=' ')
	study = db.Column(db.text, nullable=False, default=' ')
	reports = db.Column(db.text, nullable=False, default=' ')
	contents = db.Column(db.text, nullable=False, default=' ')
	reference = db.Column(db.text, nullable=False, default=' ')
	createDay = db.Column(db.DateTime, nullable=False, default='1900-1-1')
	optrid = db.Column(db.String(36), nullable=False, default=' ')
	state = db.Column(db.SMALLdb.Integer, nullable=False, default=0)
	primary key (SCIEid)

class semiotic(db.Model):
	SEMCid = db.Column(db.String(36), nullable=False, primary_key=True)
	CDISid = db.Column(db.String(36))
	code = db.Column(db.String(20), nullable=False)
	groupCode = db.Column(db.String(20), nullable=False, default=' ')
	name = db.Column(db.String(100), nullable=False)
	isClassical = db.Column(db.Boolean, nullable=False, default=1)
	SPETid = db.Column(db.String(36), nullable=False, default=' ')
	illustration = db.Column(db.text, nullable=False, default=' ')
	createDay = db.Column(db.DateTime, nullable=False, default='1900-1-1')
	optrid = db.Column(db.String(36), nullable=False, default=' ')
	state = db.Column(db.SMALLdb.Integer, nullable=False, default=0)
	primary key (SEMCid))
	key = db.Column(AK_SEMIOTIC_PK_CODE_SEMIOTIC (code)

class sourceTechnology(db.Model):
	OperatorId = db.Column(db.String(36))
	Num = db.Column(db.String(50))
	Name = db.Column(db.String(50))
	Content = db.Column(db.text)
	FormationTime = db.Column(db.String(50))
	Possessor = db.Column(db.String(50))
	Bearer = db.Column(db.String(50))
	PossetionAffiliation = db.Column(db.text)
	ApplicaionAffiliation = db.Column(db.text)
	Duration = db.Column(db.String(50))
	Files = db.Column(db.String(50))
	SpecialisId = db.Column(db.String(36))
	HashId = db.Column(db.String(36), nullable=False, primary_key=True)
	State = db.Column(db.SMALLdb.Integer)
	CreateDate = db.Column(db.DateTime)
	primary key (HashId)

class specialist(db.Model):
	SPETid = db.Column(db.String(36), nullable=False, primary_key=True)
	name = db.Column(db.String(20), nullable=False)
	code = db.Column(db.String(20))
	birthday = db.Column(db.DateTime, nullable=False)
	nationality = db.Column(db.SMALLdb.Integer, nullable=False)
	native = db.Column(db.String(6), nullable=False)
	gender = db.Column(db.SMALLdb.Integer, nullable=False)
	afflication = db.Column(db.String(100), nullable=False)
	telephone = db.Column(db.String(100), nullable=False)
	address = db.Column(db.String(100), nullable=False)
	postalcode = db.Column(db.String(20), nullable=False)
	status = db.Column(db.String(100), nullable=False)
	principalship = db.Column(db.String(100), nullable=False)
	major = db.Column(db.String(100), nullable=False)
	social = db.Column(db.text, nullable=False)
	school = db.Column(db.String(100), nullable=False)
	school = db.Column(db.String(100), nullable=False)
	graduation = db.Column(db.DateTime, nullable=False)
	other = db.Column(db.String(100), nullable=False)
	learning = db.Column(db.DateTime, nullable=False)
	work = db.Column(db.DateTime, nullable=False)
	motivation = db.Column(db.String(100), nullable=False)
	mode = db.Column(db.String(100), nullable=False)
	resume = db.Column(db.text, nullable=False)
	contribution = db.Column(db.text, nullable=False)
	health = db.Column(db.String(50), nullable=False)
	clinic = db.Column(db.String(50), nullable=False)
	reseach = db.Column(db.text, nullable=False)
	recips = db.Column(db.text, nullable=False)
	drugs = db.Column(db.text, nullable=False)
	optrid = db.Column(db.String(36), nullable=False, default=' ')
	state = db.Column(db.SMALLdb.Integer, nullable=False, default=0)
	createDay = db.Column(db.DateTime, nullable=False, default='1900-1-1')
	primary key (SPETid)

class student(db.Model):
	STUDid = db.Column(db.String(36), nullable=False, primary_key=True)
	TEEXid = db.Column(db.String(36))
	name = db.Column(db.String(20), nullable=False)
	years = db.Column(db.String(20), nullable=False, default=' ')
	major = db.Column(db.String(100), nullable=False)
	domain = db.Column(db.String(30), nullable=False, default=' ')
	achievement = db.Column(db.String(100), nullable=False, default=' ')
	primary key (STUDid)

class studyRelation(db.Model):
	STRLid = db.Column(db.String(36), nullable=False, primary_key=True)
	PULLid = db.Column(db.String(36))
	name = db.Column(db.String(20), nullable=False)
	afflication = db.Column(db.String(100), nullable=False)
	reason = db.Column(db.String(100), nullable=False, default=' ')
	primary key (STRLid)

class studyStory(db.Model):
	STSTid = db.Column(db.String(36), nullable=False, primary_key=True)
	SPETid = db.Column(db.String(36))
	study_start_date db.DateTime, nullable=False)
	start = db.Column(smalldb.Integer, nullable=False, default=0)
	read = db.Column(smalldb.Integer, nullable=False, default=0)
	read = db.Column(smalldb.Integer, nullable=False, default=0)
	practice = db.Column(smalldb.Integer, nullable=False, default=0)
	practice = db.Column(smalldb.Integer, nullable=False, default=0)
	study_end_date db.DateTime, nullable=False)
	end = db.Column(smalldb.Integer, nullable=False, default=0)
	matter = db.Column(db.SMALLdb.Integer, nullable=False)
	matter = db.Column(db.text, nullable=False, default=' ')
	work_start_date db.DateTime, nullable=False)
	work = db.Column(smalldb.Integer, nullable=False, default=0)
	clinic = db.Column(smalldb.Integer, nullable=False, default=0)
	clinic = db.Column(smalldb.Integer, nullable=False, default=0)
	study = db.Column(smalldb.Integer, nullable=False, default=0)
	study = db.Column(smalldb.Integer, nullable=False, default=0)
	clinic = db.Column(smalldb.Integer, nullable=False, default=0)
	root = db.Column(smalldb.Integer, nullable=False, default=0)
	root = db.Column(db.String(50), nullable=False)
	work = db.Column(db.String(20), nullable=False)
	work = db.Column(db.String(20), nullable=False)
	work = db.Column(db.String(20), nullable=False)
	work = db.Column(db.String(50), nullable=False)
	study = db.Column(db.String(50), nullable=False, default=' ')
	other = db.Column(db.text, nullable=False, default=' ')
	createDay = db.Column(db.DateTime, nullable=False, default='1900-1-1')
	optrid = db.Column(db.String(36), nullable=False, default=' ')
	state = db.Column(db.SMALLdb.Integer, nullable=False, default=0)
	primary key (STSTid)

class symptom(db.Model):
	SYPMid = db.Column(db.String(36), nullable=False, primary_key=True)
	code = db.Column(db.String(20), nullable=False)
	name = db.Column(db.String(50), nullable=False)
	parentcode = db.Column(db.String(20), nullable=False)
	level = db.Column(db.SMALLdb.Integer, nullable=False)
	kind = db.Column(db.SMALLdb.Integer, nullable=False, default=0)
	sort = db.Column(db.SMALLdb.Integer, nullable=False, default=1)
	valSort = db.Column(db.Integer, nullable=False, default=0)
	hasFile = db.Column(db.Boolean, nullable=False, default=0)
	isClassical = db.Column(db.Boolean, nullable=False, default=1)
	SPETid = db.Column(db.String(36), nullable=False, default=' ')
	illustration = db.Column(db.text, nullable=False, default=' ')
	createDay = db.Column(db.DateTime, nullable=False, default='1900-1-1')
	optrid = db.Column(db.String(36), nullable=False, default=' ')
	state = db.Column(db.SMALLdb.Integer, nullable=False, default=0)
	primary key (SYPMid))
	key = db.Column(AK_SYMPTOM_PK_CODE_SYMPTOM (code)

class syscode(db.Model):
	CODEid = db.Column(db.String(36), nullable=False, primary_key=True)
	no = db.Column(db.Integer, nullable=False)
	code = db.Column(db.String(20), nullable=False)
	name = db.Column(db.String(50), nullable=False, default=' ')
	illustration = db.Column(db.text, nullable=False, default=' ')
	primary key (CODEid))
	key = db.Column(AK_SYSCODE_PK_CODE_SYSCODE (code))
	key = db.Column(AK_SYSCODE_PK_NO_SYSCODE (no)

class syscodeValue(db.Model):
	SVALid = db.Column(db.String(36), nullable=False, primary_key=True)
	CODEid = db.Column(db.String(36), nullable=False, default=' ')
	subno = db.Column(db.Integer, nullable=False)
	subcode = db.Column(db.String(20), nullable=False)
	truevalue = db.Column(db.String(100))
	py = db.Column(db.String(20) default=' ')
	wb = db.Column(db.String(20) default=' ')
	illustration db.text = db.Column(default=' ')
	primary key (SVALid)

class sysfun(db.Model):
	SFUNid = db.Column(db.String(36), nullable=False, primary_key=True)
	code = db.Column(db.String(20), nullable=False)
	parentcode = db.Column(db.String(20), nullable=False, default='-1')
	level = db.Column(db.SMALLdb.Integer, nullable=False)
	name = db.Column(db.String(100), nullable=False)
	href = db.Column(db.String(200), nullable=False, default=' ')
	targetFrame = db.Column(db.String(100), nullable=False, default=' ')
	illustration = db.Column(db.text, nullable=False, default=' ')
	state = db.Column(db.SMALLdb.Integer, nullable=False, default=0)
	primary key (SFUNid))
	key = db.Column(AK_SYSFUN_PK_CODE_SYSFUN (code)

class table(db.Model):1
	id = db.Column(char(10), nullable=False, primary_key=True)
	name = db.Column(char(10))
	primary key (id)

class talentreward(db.Model):
	OperatorId = db.Column(db.String(36))
	Name = db.Column(db.String(50))
	Category = db.Column(db.String(50))
	Leval = db.Column(db.String(50))
	Principal = db.Column(db.String(50))
	Participent = db.Column(db.String(50))
	Affiliation = db.Column(db.text)
	StaringTime = db.Column(db.String(50))
	Source = db.Column(db.text)
	Absturct = db.Column(db.text)
	SpecialisId = db.Column(db.String(36))
	HashId = db.Column(db.String(36), nullable=False, primary_key=True)
	State = db.Column(db.SMALLdb.Integer)
	CreateDate = db.Column(db.DateTime)
	primary key (HashId)

class teachExperience(db.Model):
	TEEXid = db.Column(db.String(36), nullable=False, primary_key=True)
	STSTid = db.Column(db.String(36))
	study = db.Column(db.String(300), nullable=False)
	clinic = db.Column(db.String(300), nullable=False)
	db.Integereraction_gist db.String(300), nullable=False)
	other = db.Column(db.String(300), nullable=False)
	schoolage = db.Column(db.String(300), nullable=False)
	knowledge = db.Column(db.String(300), nullable=False)
	moral = db.Column(db.String(300), nullable=False)
	other = db.Column(db.String(300), nullable=False)
	school = db.Column(db.text, nullable=False)
	course = db.Column(db.String(300), nullable=False)
	period _ratio = db.Column(db.String(300), nullable=False)
	db.textbook = db.Column(db.text, nullable=False)
	inherit = db.Column(db.text, nullable=False)
	teach = db.Column(db.text, nullable=False)
	combine = db.Column(db.text, nullable=False)
	system = db.Column(db.text, nullable=False)
	department = db.Column(db.text, nullable=False)
	research = db.Column(db.text, nullable=False)
	support = db.Column(db.text, nullable=False)
	primary key (TEEXid)

class teaching(db.Model):
	TEACid = db.Column(db.String(36), nullable=False, primary_key=True)
	PULLid = db.Column(db.String(36))
	start = db.Column(db.String(16), nullable=False, default='1900-1-1')
	end = db.Column(db.String(16), nullable=False, default='1900-1-1')
	teach = db.Column(db.String(100), nullable=False, default=' ')
	major = db.Column(db.String(100), nullable=False)
	primary key (TEACid)

class techCreative(db.Model):
	Num = db.Column(db.String(50))
	Name = db.Column(db.text)
	Conent = db.Column(db.text)
	FormationTime = db.Column(db.String(50))
	Author = db.Column(db.String(50))
	Files = db.Column(db.String(50))
	HashId = db.Column(db.String(36), nullable=False, primary_key=True)
	State = db.Column(db.SMALLdb.Integer)
	SpecialisId = db.Column(db.String(36))
	CreateDate = db.Column(db.DateTime)
	OperatorId = db.Column(db.String(36))
	primary key (HashId)

class technologyapplication(db.Model):
	OperatorId = db.Column(db.String(36))
	Num = db.Column(db.String(50))
	Name = db.Column(db.String(50))
	Disease = db.Column(db.String(50))
	Department = db.Column(db.String(50))
	Author = db.Column(db.String(50))
	Affiliation = db.Column(db.text)
	Percentage = db.Column(db.String(50))
	Beneficiary = db.Column(db.text)
	EfficacyAssement = db.Column(db.text)
	HealthEconomics = db.Column(db.text)
	SpecialisId = db.Column(db.String(36))
	HashId = db.Column(db.String(36), nullable=False, primary_key=True)
	State = db.Column(db.SMALLdb.Integer)
	CreateDate = db.Column(db.DateTime)
	primary key (HashId)

class technologycase(db.Model):
	OperatorId = db.Column(db.String(36))
	Num = db.Column(db.String(50))
	Name = db.Column(db.String(50))
	Possessor = db.Column(db.String(50))
	PossesstionAffilation = db.Column(db.String(50))
	specialisId = db.Column(db.String(36))
	HashId = db.Column(db.String(36), nullable=False, primary_key=True)
	State = db.Column(db.SMALLdb.Integer)
	CreateDate = db.Column(db.DateTime)
	primary key (HashId)

class userrole(db.Model):
	ROLEid = db.Column(db.String(36), nullable=False, primary_key=True)
	code = db.Column(db.String(20), nullable=False)
	name = db.Column(db.String(100), nullable=False)
	illustration = db.Column(db.text, nullable=False, default=' ')
	state = db.Column(db.SMALLdb.Integer, nullable=False, default=0)
	primary key (ROLEid))
	key = db.Column(AK_USERROLE_PK_CODE_USERROLE (code)

class userrolefun(db.Model):
	ROLEid = db.Column(db.String(36), nullable=False, primary_key=True)
	SFUNid = db.Column(db.String(36), nullable=False)
	primary key (ROLEid, SFUNid)

class wDisease(db.Model):
	WDISid = db.Column(db.String(36), nullable=False, primary_key=True)
	code = db.Column(db.String(20), nullable=False)
	name = db.Column(db.String(100), nullable=False)
	parentcode = db.Column(db.String(20), nullable=False)
	level = db.Column(db.SMALLdb.Integer, nullable=False)
	isClassical = db.Column(db.Boolean, nullable=False, default=1)
	SPETid = db.Column(db.String(36), nullable=False, default=' ')
	illustration = db.Column(db.text, nullable=False, default=' ')
	createDay = db.Column(db.DateTime, nullable=False, default='1900-1-1')
	optrid = db.Column(db.String(36), nullable=False, default=' ')
	state = db.Column(db.SMALLdb.Integer, nullable=False, default=0)
	primary key (WDISid))
	key = db.Column(AK_WDISEASE_PK_CODE_WDISEASE (code)

class wisdom(db.Model):
	WISDid = db.Column(db.String(36), nullable=False, primary_key=True)
	REBOid = db.Column(db.String(36))
	content = db.Column(db.text, nullable=False, default=' ')
	primary key (WISDid)
